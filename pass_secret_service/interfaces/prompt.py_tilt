# Implementation of the org.freedesktop.Secret.Prompt interface

from dbus_next.service import (
    method,
    ServiceInterface,
    signal,
)

from dbus_next import Variant

from pass_secret_service.common.names import base_path
from pass_secret_service.common.tools import SerialMixin

class Prompt(ServiceInterface, SerialMixin):
    def _unregister(self):
        self.bus.unexport(self.path)

    def __init__(self, bus):
        super().__init__('org.freedesktop.Secret.Prompt')
        self.bus = bus
        self.path = '{}/prompt/prompt{}'.format(base_path, self._serial())
        # Register with dbus
        self.bus.export(self.path, self)

    @method()
    def Prompt(self, window_id: 's') -> None:
        pass

    @method()
    def Dismiss(self) -> None:
        self._unregister()

    @signal()
    def Completed(self) -> 'bv':
        return True, Variant('s', '')
